{"version":3,"sources":["components/ConsentBanner.js","components/App.js","reportWebVitals.js","index.js"],"names":["qs","require","ConsentBanner","props","state","purpose","data","origin","location","search","values","parse","ignoreQueryPrefix","bannerData","JSON","Buffer","from","toString","originUrl","url","e","fetch","process","method","headers","then","result","window","replace","error","console","log","this","onClick","sendConsent","Component","App","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","config","ReactDOM","render","document","getElementById"],"mappings":"6MACMA,EAAKC,EAAQ,IAEbC,E,kDAOJ,WAAYC,GAAQ,IAAD,uBACjB,gBAPFC,MAAQ,CACNC,QAAS,KACTC,KAAM,GACNC,OAAQ,MAKR,IAAQC,EAAaL,EAAbK,SACR,GAAIA,EAAU,CACZ,IAAQC,EAAWD,EAAXC,OACR,GAAIA,EAAQ,CAEV,IAAMC,EAASV,EAAGW,MAAMF,EAAQ,CAAEG,mBAAmB,IAC/CC,EAAaC,KAAKH,MAAMI,EAAOC,KAAKN,EAAOJ,KAAM,UAAUW,YAC3DC,EAAYH,EAAOC,KAAKN,EAAOH,OAAQ,UAAUU,WACvD,EAAKb,MAAQ,CAAEE,KAAMO,EAAWP,KAAMD,QAASQ,EAAWR,QAASc,IAAKD,IAV3D,S,+CAenB,SAAYE,EAAGf,EAASc,GAKtBE,MAAM,GAAD,OAAIC,yBAAJ,wCAAoEjB,GAJlD,CACrBkB,OAAQ,OACRC,QAAS,CAAE,eAAgB,sBAGxBC,MACG,SAACC,GAAaC,OAAOnB,SAASoB,QAAQT,MACtC,SAACU,GAAYC,QAAQC,IAAIF,Q,oBAInC,WAAU,IAAD,OACP,EAA+BG,KAAK5B,MAA5BE,EAAR,EAAQA,KAAMD,EAAd,EAAcA,QAASc,EAAvB,EAAuBA,IACvB,OACI,gCACE,sDACA,uEACA,iFAAmD,4BAAIb,IAAvD,uBAAoF,4BAAID,IAAxF,OACA,4DAA8B,+CAA9B,OACA,wBAAQ4B,QAAS,SAACb,GAAD,OAAO,EAAKc,YAAYd,EAAGf,EAASc,IAArD,2B,GA1CkBgB,aAgDbjC,Q,4KC/CTkC,E,4JAEJ,WACM,OACI,eAAC,IAAD,WACE,8DACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,WAAWC,UAAWpC,MAClC,cAAC,IAAD,CAAUc,KAAK,IAAIuB,GAAG,gB,GARpBJ,aAeHC,ICPAI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdxC,EAAQ,IAAU+C,SAGlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.237d33a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nconst qs = require('qs');\n\nclass ConsentBanner extends Component {\n  state = {\n    purpose: null,\n    data: [],\n    origin: null\n  }\n\n  constructor(props) {\n    super();\n    const { location } = props;\n    if (location) {\n      const { search } = location\n      if (search) {\n        /* Get query values (banner data and origin url)*/\n        const values = qs.parse(search, { ignoreQueryPrefix: true })\n        const bannerData = JSON.parse(Buffer.from(values.data, 'base64').toString());\n        const originUrl = Buffer.from(values.origin, 'base64').toString();\n        this.state = { data: bannerData.data, purpose: bannerData.purpose, url: originUrl }\n      }\n    }\n  }\n\n  sendConsent(e, purpose, url) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    };\n    fetch(`${process.env.REACT_APP_SERVER_URL}/consent/set-consent?purpose=${purpose}`, requestOptions)\n        .then(\n            (result) => { window.location.replace(url) },\n            (error) => { console.log(error)}\n        );\n  }\n\n  render() {\n    const { data, purpose, url } = this.state;\n    return (\n        <div>\n          <h1>Webus Cookie Consent</h1>\n          <h3>This operation requires your consent.</h3>\n          <p>This operation requires you to share your data: <b>{data}</b> for the purpose of <b>{purpose}</b>.</p>\n          <p>To find out more, read our <b>Privacy Policy</b>.</p>\n          <button onClick={(e) => this.sendConsent(e, purpose, url)}>Submit</button>\n        </div>\n    )\n  }\n}\n\nexport default ConsentBanner;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport ConsentBanner from \"./ConsentBanner\";\n\nclass App extends Component {\n\n  render() {\n        return (\n            <BrowserRouter>\n              <h1> RuleKeeper Manager Service </h1>\n              <Switch>\n                <Route path=\"/consent\" component={ConsentBanner} />\n                <Redirect from=\"*\" to=\"/\" />\n              </Switch>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config()\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}